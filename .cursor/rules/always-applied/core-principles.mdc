---
description: Core documentation principles and writing standards
globs: 
alwaysApply: true
---

# Core Documentation Principles

Provide developers with documentation that is quick to read, easy to follow, and immediately actionable.

## Writing Style & Tone

| Guideline | Why it matters |
|-----------|---------------|
| **Active voice** | "Connect the SDK" is clearer than "The SDK should be connected." |
| **Present tense** | Keeps instructions straightforward (e.g., "Run" not "You will run"). |
| **Second‑person ("you")** | Speaks directly to the reader. Reserve "we" for collaborative tutorials. |
| **Explain intent before action** | Briefly state *why* a step is needed, then show *how*. |
| **Concrete examples over theory** | Code snippets and visuals anchor concepts. |
| **Consistent terminology** | Define a term once; reuse it exactly the same everywhere. |
| **Parallel structure** | Lists and headings should follow consistent grammatical patterns. |
| **Descriptive link text** | Use "view the guide" rather than "click here." |
| **Comment code sparsely** | Only where intent isn't obvious from variable/function names. |

> **Rule of thumb**: every sentence should either clarify *why* or *how*—if it does neither, remove or rewrite it.

## Style Rules

- **Tone**: Direct, professional, friendly
- Break up large blocks of text with line‑breaks
- Avoid marketing or promotional wording
- Link to related pages when helpful, especially the **API reference** at `/fern/api-reference`
- Use **bold** text to emphasize key names or concepts
- **Titles**: Capitalize only the first word unless a proper noun is used
- **Subtitles**: Begin with *Learn to …* for guides; otherwise keep them concise and factual
- **Emojis / decorative icons**: Use only when essential for comprehension 
